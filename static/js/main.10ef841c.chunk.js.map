{"version":3,"sources":["components/Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","useState","quote","setQuote","author","setAuthor","useEffect","getQuote","quotesArray","Array","url","fetch","then","res","json","data","randomNum","Math","floor","random","length","push","randomQuote","id","onClick","console","log","className","disabled","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA6EeA,EAzEA,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAESF,mBAAS,IAFlB,mBAEZG,EAFY,KAEJC,EAFI,KAInBC,qBAAU,WACRC,MACC,IAEH,IAAMC,EAAc,IAAIC,MAEpBC,EAAG,wIAEDH,EAAW,WACfI,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAChDZ,EAAYa,KAAKL,GACjB,IAAIM,EAAcP,EAAKC,GACvBb,EAASmB,EAAYpB,OACrBG,EAAUiB,EAAYlB,YA4B5B,OACE,sBAAKmB,GAAG,YAAR,UACE,qBAAKA,GAAG,OAAR,SACE,4BAAIrB,MAEN,qBAAKqB,GAAG,SAAR,SACE,4BAAInB,MAEN,sBAAKmB,GAAG,UAAR,UACE,wBACEC,QAdoB,WAZ1Bb,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAELU,QAAQC,IAAIlB,OAuBVe,GAAG,iBACHI,UAAU,SACVC,UAAQ,EAJV,oCAQA,wBAAQJ,QAxCS,WACrBjB,IAEAkB,QAAQC,IAAIlB,IAqCyBe,GAAG,YAAYI,UAAU,SAA1D,8BCzDOE,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCKSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.10ef841c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Quotes.css\";\r\n\r\nconst Quotes = () => {\r\n  const [quote, setQuote] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getQuote();\r\n  }, []);\r\n\r\n  const quotesArray = new Array();\r\n\r\n  let url = `https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json`;\r\n\r\n  const getQuote = () => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let randomNum = Math.floor(Math.random() * data.length);\r\n        quotesArray.push(randomNum);\r\n        let randomQuote = data[randomNum];\r\n        setQuote(randomQuote.quote);\r\n        setAuthor(randomQuote.author);\r\n        // console.log(quotesArray);\r\n      });\r\n  };\r\n\r\n  const handleNewQuote = () => {\r\n    getQuote();\r\n    // quotesArray.push(quote, author)\r\n    console.log(quotesArray);\r\n  };\r\n\r\n  const getPreviousQuote = () => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // let number = quotesArray[quotesArray.length - 2];\r\n        console.log(quotesArray);\r\n        // let previousQuote = data[number];\r\n        // console.log(previousQuote)\r\n        // setQuote(previousQuote.quote);\r\n        // setAuthor(previousQuote.author);\r\n      });\r\n  };\r\n\r\n  const handlePreviousQuote = () => {\r\n    getPreviousQuote();\r\n  };\r\n\r\n  return (\r\n    <div id=\"quote-box\">\r\n      <div id=\"text\">\r\n        <p>{quote}</p>\r\n      </div>\r\n      <div id=\"author\">\r\n        <p>{author}</p>\r\n      </div>\r\n      <div id=\"buttons\">\r\n        <button\r\n          onClick={handlePreviousQuote}\r\n          id=\"previous-quote\"\r\n          className=\"button\"\r\n          disabled\r\n        >\r\n          Get the previous quote\r\n        </button>\r\n        <button onClick={handleNewQuote} id=\"new-quote\" className=\"button\">\r\n          New quote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import './App.css';\n\nimport Quotes from './components/Quotes'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quotes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}